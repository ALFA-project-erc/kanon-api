name: CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Lint
        run: |
          pip install pre-commit
          pre-commit run --all-files

  test:
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - 3.9
        os:
          - ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: abatilo/actions-poetry@v2.1.1
      - name: Config Poetry
        run: poetry config virtualenvs.in-project true
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: poetry install
      - name: Test with Pytest
        run: poetry run pytest --cov=kanon_api --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  build:
    needs: [lint, test]
    if: ${{github.event_name != 'pull_request' || github.event.pull_request.draft == false}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-single-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-single-buildx
      - name: Build
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          load: true
          tags: kanonapi:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      - name: Run image
        run: docker run -d -p 8000:8000 kanonapi:latest
      - name: Test curl
        run: |
          sleep 5s
          curl --fail "localhost:8000/radices/Sexagesimal/to_float/?value=5"
